How did viewing a diff between two versions help you spot the bug?

It made the searching process faster and there was a lower chance of missing the
bug since computer does the job more accurately.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

First, easier access reduces the time finding those history. Second, it avoids
situations where one has to rewrite codes that they've changed before.


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
Docs does?

Pros: Keeping a concise and meaningful collection of versions
Cons: Having to remember creating a commit


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Because different version control systems serve different purposes. Git is often
used for files of codes, which often have dependency on each other to some
extent. On the other hand, Google Docs serves documents, which usually are
fairly independent, and would be rather redundant to save a version multiple
files since most changes are made entirely in a single file.


How can you use the commands git log and git diff to view the history of files?

We can use git log to show a list of commits of the repository, and then use git
diff to show changes between two commits.


How might using version control make you more confident to make changes that
could break something?

Using version control ensures that we can restore previous versions easily, so
we don't have to worry about making things worse.


Now that you have your workspace set up, what do you want to try using Git for?

I want to use Git as the version control system for my upcoming projects.
